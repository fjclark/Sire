// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "_MM_free_functions.pypp.hpp"

namespace bp = boost::python;

#include "SireMM/interff.h"

#include "SireMM/internalff.h"

#include "SireMM/intraff.h"

#include "SireMol/core.h"

#include "calculate_energy.h"

#include <QDebug>

#include "calculate_energy.h"

#include "SireMM/interff.h"

#include "SireMM/internalff.h"

#include "SireMM/intraff.h"

#include "SireMol/core.h"

#include "calculate_energy.h"

#include <QDebug>

#include "calculate_energy.h"

#include "SireMM/interff.h"

#include "SireMM/internalff.h"

#include "SireMM/intraff.h"

#include "SireMol/core.h"

#include "calculate_energy.h"

#include <QDebug>

#include "calculate_energy.h"

#include "SireMM/interff.h"

#include "SireMM/internalff.h"

#include "SireMM/intraff.h"

#include "SireMol/core.h"

#include "calculate_energy.h"

#include <QDebug>

#include "calculate_energy.h"

#include "SireMM/interff.h"

#include "SireMM/internalff.h"

#include "SireMM/intraff.h"

#include "SireMol/core.h"

#include "calculate_energy.h"

#include <QDebug>

#include "calculate_energy.h"

void register_free_functions(){

    { //::SireMM::calculate_energy
    
        typedef ::SireUnits::Dimension::GeneralUnit ( *calculate_energy_function_type )( ::SireMol::MoleculeView const & );
        calculate_energy_function_type calculate_energy_function_value( &::SireMM::calculate_energy );
        
        bp::def( 
            "calculate_energy"
            , calculate_energy_function_value
            , ( bp::arg("mol") )
            , "" );
    
    }

    { //::SireMM::calculate_energy
    
        typedef ::SireUnits::Dimension::GeneralUnit ( *calculate_energy_function_type )( ::SireMol::MoleculeView const &,::SireBase::PropertyMap const & );
        calculate_energy_function_type calculate_energy_function_value( &::SireMM::calculate_energy );
        
        bp::def( 
            "calculate_energy"
            , calculate_energy_function_value
            , ( bp::arg("mol"), bp::arg("map") )
            , "" );
    
    }

    { //::SireMM::calculate_energy
    
        typedef ::SireUnits::Dimension::GeneralUnit ( *calculate_energy_function_type )( ::SireMol::Molecules const & );
        calculate_energy_function_type calculate_energy_function_value( &::SireMM::calculate_energy );
        
        bp::def( 
            "calculate_energy"
            , calculate_energy_function_value
            , ( bp::arg("mols") )
            , "" );
    
    }

    { //::SireMM::calculate_energy
    
        typedef ::SireUnits::Dimension::GeneralUnit ( *calculate_energy_function_type )( ::SireMol::Molecules const &,::SireBase::PropertyMap const & );
        calculate_energy_function_type calculate_energy_function_value( &::SireMM::calculate_energy );
        
        bp::def( 
            "calculate_energy"
            , calculate_energy_function_value
            , ( bp::arg("mols"), bp::arg("map") )
            , "" );
    
    }

    { //::SireMM::calculate_energy
    
        typedef ::SireUnits::Dimension::GeneralUnit ( *calculate_energy_function_type )( ::SireFF::ForceFields & );
        calculate_energy_function_type calculate_energy_function_value( &::SireMM::calculate_energy );
        
        bp::def( 
            "calculate_energy"
            , calculate_energy_function_value
            , ( bp::arg("ffields") )
            , "" );
    
    }

}
